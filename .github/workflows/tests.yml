# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "tests"
  tests-python3:
    # The type of runner that the job will run on
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
    runs-on: ${{ matrix.os }}

    # timeout for the jobs
    # timeout-minutes: 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a command using the runners shell
      - name: Install poetry
        run: python3 -m pip install poetry
      - name: Install poetry packages
        run: python3 -m poetry install
      - name: Run pytest for Python3
        run: python3 -m poetry run pytest --cov=src --cov-report=xml
        continue-on-error: true

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  tests-python2:
    # The type of runner that the job will run on
    runs-on: macos-10.15

    # timeout for the jobs
    # timeout-minutes: 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a command using the runners shell
      - name: Install pipenv
        run: python2 -m pip install pipenv
      - name: Install pipenv packages
        run: python2 -m pipenv install
      - name: Run pytest for Python2
        run: python2 -m pipenv run pytest
        continue-on-error: true
